name: "Build onlyoffice-miro"

run-name: "Build onlyoffice-miro: ${{ github.event.inputs.tag || github.run_number }}"

on:
  push:
    branches:
    - develop

  workflow_dispatch:
    inputs:
      tag:
        description: 'Specify tag or it will be auto service:rc-<run_number>'
        type: string
        required: false
      miro_onlyoffice_backend:
        description: 'Specify backend address'
        type: string
        required: false
      miro_installation_url:
        description: 'Specify installation url'
        type: string
        required: false
      demo_expiration_days:
        description: 'Specify demo expiration'
        type: string
        required: false

env:
  DOCKER_HUB_IMAGE_NAME: onlyoffice-miro
  DOCKER_HUB_NAMESPACE: onlyoffice

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [ frontend, backend ]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Hide sensetive values
      run: |
         MIRO_ONLYOFFICE_BACKEND="$(jq -r '.inputs.miro_onlyoffice_backend' $GITHUB_EVENT_PATH)"
         MIRO_INSTALLATION_URL="$(jq -r '.inputs.miro_installation_url' $GITHUB_EVENT_PATH)"
         DEMO_EXPIRATION_DAYS="$(jq -r '.inputs.demo_expiration_days' $GITHUB_EVENT_PATH)"

         echo ::add-mask::${MIRO_ONLYOFFICE_BACKEND}
         echo ::add-mask::${MIRO_INSTALLATION_URL}
         echo ::add-mask::${DEMO_EXPIRATION_DAYS}

         echo "VITE_MIRO_ONLYOFFICE_BACKEND=${MIRO_ONLYOFFICE_BACKEND:=${{ secrets.MIRO_ONLYOFFICE_BACKEND }}}" >> "$GITHUB_ENV"
         echo "VITE_MIRO_INSTALLATION_URL=${MIRO_INSTALLATION_URL:=${{secrets.VITE_MIRO_INSTALLATION_URL }}}" >> "$GITHUB_ENV"
         echo "VITE_ASC_DEMO_EXPIRATION_DAYS=${DEMO_EXPIRATION_DAYS:=${{ secrets.VITE_ASC_DEMO_EXPIRATION_DAYS }}}" >> "$GITHUB_ENV"

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: handle-rc-tag
      env:
        EVENT: ${{ github.event_name }}
        REF: ${{ github.ref_name }}
        MANUAL_TAG: ${{ github.event.inputs.tag }}
      run: |
        echo "APP_VERSION=$(cat frontend/package.json | jq -r '.version')" >> "$GITHUB_ENV" # Should be set!
        if [[ "$EVENT" == 'push' && "$REF" == 'develop' ]]; then
         echo "RC_TAG=rc${{ github.run_number }}" >> "$GITHUB_ENV"
        elif [[ "$EVENT" == 'workflow_dispatch' && -z "$TAG" ]]; then
         echo "RC_TAG=rc${{ github.run_number }}" >> "$GITHUB_ENV"
        fi

    - name: Publish Image
      uses: docker/build-push-action@v6
      env:
        DOCKER_BUILD_RECORD_UPLOAD: false
      with:
        build-args: |
                VITE_MIRO_ONLYOFFICE_BACKEND=${{ env.VITE_MIRO_ONLYOFFICE_BACKEND }}
                VITE_MIRO_INSTALLATION_URL=${{ env.VITE_MIRO_INSTALLATION_URL }}
                VITE_ASC_DEMO_EXPIRATION_DAYS=${{ env.VITE_ASC_DEMO_EXPIRATION_DAYS }}
        context: ${{ matrix.service }}/.
        file: ${{ matrix.service}}/Dockerfile
        push: true
        platforms: linux/amd64
        tags: ${{ env.DOCKER_HUB_NAMESPACE }}/miro-${{ matrix.service }}:${{ env.APP_VERSION }}-${{ github.event.inputs.tag || env.RC_TAG }}
